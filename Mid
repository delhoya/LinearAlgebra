#1

x = vector([-3,14,-3,10,8,12,2])   
y = vector([8,1,0,-1,6,5,-3 ])  

x_norm = x.norm()
y_norm = y.norm()
z = x.inner_product(y)

# 내적의 정의에 의하여 X*Y = |x||y|cos(Theta)
cos_theta = z / ((x_norm)*(y_norm))  
# 사잇각 arccos 함수 사용 
theta = arccos(cos_theta)

print("x:",x)
print("y:",y)
print("x의 노름:",x_norm)
print("y의 노름:",y_norm)
print("x와y의 내적값:",z)
print("x와y의 사잇각의 코사인값:",cos_theta)
print("x와y의 사잇각:",theta)

################################################################################

x: (-3, 14, -3, 10, 8, 12, 2)
y: (8, 1, 0, -1, 6, 5, -3)
x의 노름: sqrt(526)
y의 노름: 2*sqrt(34)
x와y의 내적값: 82
x와y의 사잇각의 코사인값: 41/17884*sqrt(526)*sqrt(34)
x와y의 사잇각: arccos(41/17884*sqrt(526)*sqrt(34))

################################################################################

#2


A = matrix (QQ,3,4,[0,3,2,5,8,-7,1,2,5,1,-4,9])
print(A)
print("-----------------")
ab5 = A.with_rescaled_row(1,-5)
print(ab5)
print("-----------------")
abb = ab5.with_added_multiple_of_row(2,1,1)
print(abb)


################################################################################

[ 0  3  2  5]
[ 8 -7  1  2]
[ 5  1 -4  9]
-----------------
[  0   3   2   5]
[-40  35  -5 -10]
[  5   1  -4   9]
-----------------
[  0   3   2   5]
[-40  35  -5 -10]
[-35  36  -9  -1]

################################################################################

#3
a = matrix(4,4,[2,-2,-5,5,3,-1,3,-7,0,-3,-8,14,-1,2,7,-9])
print("행렬a는")
print ( a)
print("===========")
print("상수항")
b = vector ([11,6,8,-10])
print (b)
print("===========")
print("a.solve_right(b)")
print(a.solve_right(b))
print("===========")

aa = matrix(4,5,[2,-2,-5,5,11,3,-1,3,-7,6,0,-3,-8,14,8,-1,2,7,-9,-10])
print("상수를 첨가행렬로")
print(aa)
print("===========")
print("RREF 계산")
print(aa.rref())
print("===========")

################################################################################

행렬a는
[ 2 -2 -5  5]
[ 3 -1  3 -7]
[ 0 -3 -8 14]
[-1  2  7 -9]
===========
상수항
(11, 6, 8, -10)
===========
a.solve_right(b)
(3, 0, -1, 0)
===========
상수를 첨가행렬로
[  2  -2  -5   5  11]
[  3  -1   3  -7   6]
[  0  -3  -8  14   8]
[ -1   2   7  -9 -10]
===========
RREF 계산
[ 1  0  0 -2  3]
[ 0  1  0 -2  0]
[ 0  0  1 -1 -1]
[ 0  0  0  0  0]
===========

################################################################################
#4
aa = matrix ([[1,-4,0,3,1],[5,1,-1,6,-4],[-2,8,7,-3,5],[0,0,0,2,-7],[0,0,0,-8,9]])
print(aa)
print("====")
print("A inverse det()")
print(aa.inverse().det())
print("====")
print("det A")

print(aa.det())


################################################################################


[ 1 -4  0  3  1]
[ 5  1 -1  6 -4]
[-2  8  7 -3  5]
[ 0  0  0  2 -7]
[ 0  0  0 -8  9]
====
A inverse det()
-1/5586
====
det A
-5586
################################################################################

#5
print(Permutation([3,5,2,7,6,1,4]).inversions())
print(Permutation([3,5,2,7,6,1,4]).number_of_inversions())
print(Permutation([3,5,2,7,6,1,4]).is_even())

################################################################################

[(1, 3), (1, 6), (2, 3), (2, 6), (2, 7), (3, 6), (4, 5), (4, 6), (4, 7), (5, 6), (5, 7)]
11
False

################################################################################

#6
a = matrix([[1,1.5],[1,2.0],[1,3.2],[1,4.5],[1,7.3] ])
b = vector([3.0,4.8,5.3,6.4,9.4])
print(a)
print(b)
cc = n((a.transpose()*a).inverse()*a.transpose()*b,digits = 4)
print("y = a+bx 에서의 a,b")
print(cc)

[1.00000000000000 1.50000000000000]
[1.00000000000000 2.00000000000000]
[1.00000000000000 3.20000000000000]
[1.00000000000000 4.50000000000000]
[1.00000000000000 7.30000000000000]
(3.00000000000000, 4.80000000000000, 5.30000000000000, 6.40000000000000, 9.40000000000000)
y = a+bx 에서의 a,b
(2.085, 0.9986)

################################################################################

#7

a = matrix ([[5,1,-3],[2,-1,-1]])
print("행렬a는")
print (a)
print("===========")
print("상수항")
b = vector ([0,0])
print (b)
print("===========")
print("a.solve_right(b)")
print("동차선형연립방정식 자명해")

print(a.solve_right(b))
print("===========")

aa = matrix([[5,1,-3,0],[2,-1,-1,-0]])
print("상수를 첨가행렬로")
print(aa)
print("===========")
print("RREF 계산")
print(aa.rref())
print("===========")


ss = vector ([5,1,-3])
qq = vector ([2,-1,-1])
cp= ss.cross_product(qq)   
print("벡터외적")
print(cp)


print("===========")

print("정사영시킬 벡터 w 와 v")
w =  vector([4,1,7])
v =  vector([0,-1,4])

print("w =",w)
print("v =",v)

print("===========")

ww = w.inner_product(w)
vw = v.inner_product(w)
print("ww=",ww)
print("vw=",vw)
p = vw/ww 
print("wv / ww =",p)
print("wv / ww * w =" , p*w)

################################################################################

ww= 66
vw= 27
wv / ww = 9/22
wv / ww * w = (18/11, 9/22, 63/22)

################################################################################

#8
