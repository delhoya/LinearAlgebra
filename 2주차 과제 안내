다음 선형연립방정식을 Gauss-Jordan 소거법으로 풀어라.

교과서 예제
x = matrix([[2,4,6],[2,-1,1],[3,0,-1]])
y = vector([18,8,3])
print("[x:y]=")
print(x.augment(y))
print("RREF([x:y])=")
print(x.augment(y).rref())
print("x=",x.solve_right(y))

과제 예제
A = matrix([[2,1,1,-2],[3,-2,1,-6],[1,1,-1,-1],[5,-1,2,-8]])
b = vector([1,-2,-1,3])
print("[A:b]=")
print(A.augment(b))
print("RREF([A:b])=")
print(A.augment(b).rref())
print("x=",A.solve_right(b))


Share
[A:b]=
[ 2  1  1 -2  1]
[ 3 -2  1 -6 -2]
[ 1  1 -1 -1 -1]
[ 5 -1  2 -8  3]
RREF([A:b])=
[     1      0      0 -17/11      0]
[     0      1      0   9/11      0]
[     0      0      1   3/11      0]
[     0      0      0      0      1]

RREF 4행의 1이 아니다. 


차원 (>7차원) 
x = matrix([[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3],[2,1,2,1,2,1,2,3]])
y = vector([1,-2,3,-4,5,-6,7,-8])
print("[x:y]=")
# 첨가 행렬 함수 augment(y) 사용
print(x.augment(y))
print("RREF([x:y])=")
# RREF 구하는 함수 rref() 사용
print(x.augment(y).rref())
# RREF 를 이용하여 계산하는 함수 .solve_right 
print("x=",x.solve_right(y))


x = matrix([[2,1,2,1,2,1,2,3],[1,1,3,1,2,1,2,3],[5,1,2,12,6,1,2,3],[2,1,3,8,9,1,2,3],[2,1,2,17,2,1,2,3],[6,1,2,1,21,1,12,3],[12,11,2,1,11,1,2,3],[2,11,2,11,2,1,12,13]])
y = vector([1,-2,14,-8,16,-32,32,-32])
print("[x:y]=")
print(x.augment(y))
print("RREF([x:y])=")
print(x.augment(y).rref())
print("x=",x.solve_right(y))

[x:y]=
[  2   1   2   1   2   1   2   3   1]
[  1   1   3   1   2   1   2   3  -2]
[  5   1   2  12   6   1   2   3  14]
[  2   1   3   8   9   1   2   3  -8]
[  2   1   2  17   2   1   2   3  16]
[  6   1   2   1  21   1  12   3 -32]
[ 12  11   2   1  11   1   2   3  32]
[  2  11   2  11   2   1  12  13 -32]
RREF([x:y])=
[     1      0      0      0      0      0      0      0  65/16]
[     0      1      0      0      0      0      0      0  47/40]
[     0      0      1      0      0      0      0      0  17/16]
[     0      0      0      1      0      0      0      0  15/16]
[     0      0      0      0      1      0      0      0  -19/8]
[     0      0      0      0      0      1      0      0 737/80]
[     0      0      0      0      0      0      1      0 -33/80]
[     0      0      0      0      0      0      0      1     -5]
x= (65/16, 47/40, 17/16, 15/16, -19/8, 737/80, -33/80, -5)
