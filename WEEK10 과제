 2.  일 때, Gram-Schmidt 정규직교화 과정을 이용하여  의 기저  로부터  의 정규직교기저  를 구하여라. 
 
 
 
x1 = vector([1,1,0])
x2 = vector([0,1,2])
x3 = vector([1,2,1])
a = matrix([x1,x2,x3])
print(a)
# 직교화 과정 : 행에 대한 직교화 기저를 찾는다 a == mu*G
[g,mu] = a.gram_schmidt() 
# 정규화 과정 : 정규화된 직교 기저를 행으로 하는 행렬 생성 
print(g)
n = matrix([g.row(i)/g.row(i).norm() for i in range(0,3)])
print(n)


[1 1 0]
[0 1 2]
[1 2 1]
[   1    1    0]
[-1/2  1/2    2]
[-2/9  2/9 -1/9]
[   1/2*sqrt(2)    1/2*sqrt(2)              0]
[-1/3*sqrt(1/2)  1/3*sqrt(1/2)  4/3*sqrt(1/2)]
[          -2/3            2/3           -1/3]

=========================================================

영공간의 기저 차원 
행공간의 기저 차원
열공간의 기저 차원

a = random_matrix(QQ,7,7)
w = a.right_kernel()  # 영공간 생성
print("행렬 A = ")
print(a)
print("영공간의 기저")
print(w.basis())
print("영공간의 차원")
print(w.dimension())


행렬 A = 
[   2    0    1   -2    0    0    1]
[   2    2    0    1    2   -2   -1]
[   0    1    0   -1    1    0 -1/2]
[   0    1    1    1    0   -2    0]
[  -1   -1 -1/2    0   -1 -1/2    2]
[   0 -1/2    0   -1    2    0    2]
[ 1/2    0    2    0    1    0    1]
영공간의 기저
[

]
영공간의 차원
0
